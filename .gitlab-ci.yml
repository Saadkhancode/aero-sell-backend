# # We have 2 stage Test and Deploy
# stages:
#   - test
#   - deploy

# # Config cache
# cache:
#   paths:
#     - node_modules/

# # Test job
# test:
#   # Docker image
#   image: node:latest
#   # Attach Test job to Test stage
#   stage: test
#   # Config to use GitLab Shared Runner with Executor Docker
#   tags:
#     - my-shell-runner
#   script:
#     - npm install
#     - npm run test
#   # Defines the names of branches and tags the job runs for
#   only:
#     - div-saad

# # Deploy job
# deploy:
#   # Attach Deploy job to Deploy stage
#   stage: deploy
#   # Config to use our Runner with Executor Shell
#   variables:
#     PORT: 3333
#     JWT_SECRET: secret
#     DB_NAME: patronworks
#     MONGODB_URI: "mongodb+srv://saadk4474:CnxwMdQTG7ey9nMr@patronworks.2voqycm.mongodb.net/patronworks?retryWrites=true&w=majority"
#     BASE_URL: "http://www.patronworks.net"
#     CLOUD_NAME: djm945kfs
#   tags:
#     - my-shell-runner
#   script:
#     # Only copy changed files to project folder
#     - cp -r -u * $PROJECT_DIR
#     - cd $PROJECT_DIR
#     - npm install
#     # Restart NodeJS service
#     - forever stop $PROJECT_DIR/src/index.js || true
#     - forever start src/index.js
#   only:
#     - main
# We have 2 stage Test and Deploy
stages:
  - test
  - deploy-prod
  - deploy-dev

# Config cache
cache:
  paths:
    - node_modules/

# Test job
test:
  # Docker image
  image: node:latest
  # Attach Test job to Test stage
  stage: test
  # Config to use GitLab Shared Runner with Executor Docker
  tags:
    - my-shell-runner
  script:
    - npm install
    - npm run test
  # Defines the names of branches and tags the job runs for
  only:
    - div-saad

# Deploy to development server
deploy-dev:
  # Attach Deploy job to Deploy stage
  stage: deploy-dev
  # Config to use our Runner with Executor Shell
  variables:
    DEV_PORT: 4444
    JWT_SECRET: secret
    DEV_DB_NAME: patronworksdev
    DEV_MONGODB_URI: "mongodb+srv://saudkhanbpk:2YJeIXMGYjgeMD76@patronworksdev.rlpj5py.mongodb.net/patronworksdev?retryWrites=true&w=majority"
    BASE_URL: "http://www.patronworks.net"
    CLOUD_NAME: djm945kfs
  tags:
    - my-dev-runner
  script:
    # Only copy changed files to project folder
    - cp -r -u * $PROJECT_DIR
    - cd $PROJECT_DIR
    - npm install
    # Restart NodeJS service with forever for npm run dev
    - forever stop $PROJECT_DIR/src/index.js || true
    - NODE_ENV=development forever start src/index.js
  only:
    - master
    # Only deploy for npm run dev
    - $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG == null && $CI_COMMIT_MESSAGE =~ /npm run dev/

# Deploy to production server
deploy-prod:
  # Attach Deploy job to Deploy stage
  stage: deploy-prod
  # Config to use our Runner with Executor Shell
  variables:
    PORT: 3333
    JWT_SECRET: secret
    DB_NAME: patronworks
    MONGODB_URI: "mongodb+srv://saadk4474:CnxwMdQTG7ey9nMr@patronworks.2voqycm.mongodb.net/patronworks?retryWrites=true&w=majority"
    BASE_URL: "http://www.patronworks.net"
    CLOUD_NAME: djm945kfs
  tags:
    - my-shell-runner
  script:
    # Only copy changed files to project folder
    - cp -r -u * $PROJECT_DIR
    - cd $PROJECT_DIR
    - npm install
    # Restart NodeJS service with forever for npm start
    - forever stop $PROJECT_DIR/src/index.js || true
    - forever start src/index.js
  only:
    - main
    # Only deploy for npm start
    - $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG == null && $CI_COMMIT_MESSAGE =~ /npm start/
